
$colors:
hsla(337, 84, 48, 0.75)
hsla(160, 50, 48, 0.75)
hsla(190, 61, 65, 0.75)
hsla( 41, 82, 52, 0.75);
$size: 2.5em;
$thickness: 0.5em;

// Calculated variables.
$lat: ($size - $thickness) / 2;
$offset: $lat - $thickness;

.loader {
position: relative;
width: $size;
height: $size;
transform: rotate(165deg);

&:before,
&:after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  display: block;
  width: $thickness;
  height: $thickness;
  border-radius: $thickness / 2;
  transform: translate(-50%, -50%);
}

&:before {
  animation: before 2s infinite;
}

&:after {
  animation: after 2s infinite;
}
}

@keyframes before {
0% {
  width: $thickness;
  box-shadow:
    $lat (-$offset) nth($colors, 1),
    (-$lat) $offset nth($colors, 3);
}
35% {
  width: $size;
  box-shadow:
    0 (-$offset) nth($colors, 1),
    0   $offset  nth($colors, 3);
}
70% {
  width: $thickness;
  box-shadow:
    (-$lat) (-$offset) nth($colors, 1),
    $lat $offset nth($colors, 3);
}
100% {
  box-shadow:
    $lat (-$offset) nth($colors, 1),
    (-$lat) $offset nth($colors, 3);
}
}

@keyframes after {
0% {
  height: $thickness;
  box-shadow:
    $offset $lat nth($colors, 2),
    (-$offset) (-$lat) nth($colors, 4);
}
35% {
  height: $size;
  box-shadow:
      $offset  0 nth($colors, 2),
    (-$offset) 0 nth($colors, 4);
}
70% {
  height: $thickness;
  box-shadow:
    $offset (-$lat) nth($colors, 2),
    (-$offset) $lat nth($colors, 4);
}
100% {
  box-shadow:
    $offset $lat nth($colors, 2),
    (-$offset) (-$lat) nth($colors, 4);
}
}



/**
* Attempt to center the whole thing!
*/

html,
body {
height: 100%;
}

.loader {
position: absolute;
top: calc(50% - #{$size / 2});
left: calc(50% - #{$size / 2});
}


$starFieldWidth: 2560;
$starFieldHeight: 2560;
$starStartOffset: 600px;

$starOneScrollDuration: 100s;
$starTwoScrollDuration: 125s;
$starThreeScrollDuration: 175s;
$numStarOneStars: 1700;
$numStarTwoStars: 700;
$numStarThreeStars: 200;
$numComet: 10;

html {
  height: 100%;
  body {
    width: 100%;
    height: 100%;
    margin: 0;
  }
}


@function create-stars($n) {
  $stars: "#{random($starFieldWidth)}px #{random($starFieldHeight)}px #FFF";

  @for $i from 2 through $n {
    $stars: "#{$stars} , #{random($starFieldWidth)}px #{random($starFieldHeight)}px #FFF";
  }
  @return unquote($stars);
}

@mixin star-template($numStars, $starSize, $scrollSpeed) {
  z-index: 10;
  width: $starSize;
  height: $starSize;
  border-radius: 50%;
  background: transparent;
  box-shadow: create-stars($numStars);
  animation: animStar $scrollSpeed linear infinite;
  &:after {
    content: " ";
    top: -$starStartOffset;
    width: $starSize;
    height: $starSize;
    border-radius: 50%;
    position: absolute;
    background: transparent;
    box-shadow: create-stars($numStars);
  }
}

@mixin shooting-star-template($numStars, $starSize, $speed) {
  z-index: 10;
  width: $starSize;
  height: $starSize + 80px;
  border-top-left-radius: 50%;
  border-top-right-radius: 50%;
  position: absolute;
  bottom: 0;
  right: 0;
  background: linear-gradient(
    to top,
    rgba(255, 255, 255, 0),
    rgba(255, 255, 255, 1)
  );
  animation: animShootingStar $speed linear infinite;
}

.dark > #sky > .stars {
  @include star-template($numStarOneStars, 1px, $starOneScrollDuration);
}
.dark > #sky > .stars2 {
  @include star-template($numStarTwoStars, 2px, $starTwoScrollDuration);
}
.dark > #sky > .stars3 {
  @include star-template($numStarThreeStars, 3px, $starThreeScrollDuration);
}
.dark > #sky > .comet {
  @include shooting-star-template($numComet, 5px, 10s);
}

@keyframes animStar {
  from {
    transform: translateY(0px);
  }
  to {
    transform: translateY(-#{$starFieldHeight}px)
      translateX(-#{$starFieldWidth}px);
  }
}

@keyframes animShootingStar {
  from {
    transform: translateY(0px) translateX(0px) rotate(-45deg);
    opacity: 1;
    height: 5px;
  }
  to {
    transform: translateY(-#{$starFieldHeight}px)
      translateX(-#{$starFieldWidth}px) rotate(-45deg);
    opacity: 1;
    height: 800px;
  }
}
